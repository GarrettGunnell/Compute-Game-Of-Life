#pragma kernel Seed
#pragma kernel NewGeneration

#include "Random.cginc"

RWTexture2D<float4> Result;

[numthreads(8, 8, 1)]
void Seed(uint3 id : SV_DispatchThreadID) {
    initRand(id.x * id.y);
    Result[id.xy] = randValue() < 0.01 ? 1 : 0;
}

float4 SampleNeighbor(uint x, uint y) {
    uint3 id = uint3(x, y, 1);
    return Result[id.xy];
}

int SampleNeighbors(uint3 uv) {
    int fertility = 0;
    if (any(SampleNeighbor(uv.x - 1, uv.y - 1))) ++fertility;
    if (any(SampleNeighbor(uv.x, uv.y - 1))) ++fertility;
    if (any(SampleNeighbor(uv.x + 1, uv.y - 1))) ++fertility;
    if (any(SampleNeighbor(uv.x - 1, uv.y))) ++fertility;
    if (any(SampleNeighbor(uv.x + 1, uv.y))) ++fertility;
    if (any(SampleNeighbor(uv.x - 1, uv.y + 1))) ++fertility;
    if (any(SampleNeighbor(uv.x + 1, uv.y + 1))) ++fertility;

    return fertility;
}

[numthreads(8, 8, 1)]
void NewGeneration(uint3 id : SV_DispatchThreadID) {
    float alive = any(Result[id.xy]);
    uint3 uv = id;
    int fertility = SampleNeighbors(uv);

    Result[id.xy] = any(Result[id.xy - 1].r) ? 1 : 0;
}
